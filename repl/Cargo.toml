[package]
name = "metta-repl"
version.workspace = true
edition.workspace = true
description = "A shell to execute MeTTa"

[dependencies]
log = { workspace = true }
env_logger = { workspace = true }
anyhow = { version = "1.0.75", features = ["std"] }
rustyline = { version = "13.0.0", features = ["derive"] }
clap = { version = "4.4.0", features = ["derive"] }
signal-hook = "0.3.17"
pyo3 = { version = "0.19.2", features = ["auto-initialize"], optional = true }
pep440_rs = { version = "0.3.11", optional = true }
hyperon = { workspace = true, optional = true } #TODO: We can only link Hyperon directly or through Python, but not both at the same time.  The right fix is to allow HyperonPy to be built within Hyperon, See https://github.com/trueagi-io/hyperon-experimental/issues/283

[[bin]]
name = "metta"
path = "src/main.rs"

[features]
default = ["python"]
no_python = ["hyperon"]
python = ["pyo3", "pep440_rs"]
minimal = ["hyperon/minimal", "no_python"] #WARNING: The interpreter belonging to the hyperon python module will be used if hyperon is run through python
git = ["hyperon/git"]